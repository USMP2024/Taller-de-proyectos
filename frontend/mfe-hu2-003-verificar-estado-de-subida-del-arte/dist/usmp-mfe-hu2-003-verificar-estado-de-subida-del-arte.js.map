{"version":3,"file":"usmp-mfe-hu2-003-verificar-estado-de-subida-del-arte.js","mappings":"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","sources":["webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/Componentes/VerificarImagenes/verificarimagenes.css","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/Componentes/VerificarVideos/verificarvideos.css","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/index.css","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/css-loader/dist/runtime/api.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/object-assign/index.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/react/jsx-runtime.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/systemjs-webpack-interop/auto-public-path/auto-public-path.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/systemjs-webpack-interop/public-path.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/external system \"react\"","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/external system \"react-dom\"","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/bootstrap","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/runtime/__system_context__","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/runtime/compat get default export","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/runtime/define property getters","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/runtime/hasOwnProperty shorthand","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/runtime/make namespace object","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/runtime/publicPath","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/webpack/runtime/nonce","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/systemjs-webpack-interop/auto-public-path/1.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/single-spa-react/lib/esm/single-spa-react.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@remix-run/router/dist/router.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/index.css?00ae","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/react-router/dist/index.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/react-router-dom/dist/index.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/Componentes/VerificarImagenes/verificarimagenes.css?ea34","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/bind.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/utils.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/AxiosError.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/toFormData.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/buildURL.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/InterceptorManager.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/defaults/transitional.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/platform/browser/index.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/platform/common/utils.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/platform/index.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/defaults/index.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/transformData.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/cancel/isCancel.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/cancel/CanceledError.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/settle.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/speedometer.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/progressEventReducer.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/throttle.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/cookies.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/buildFullPath.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/combineURLs.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/mergeConfig.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/resolveConfig.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/adapters/xhr.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/composeSignals.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/trackStream.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/adapters/fetch.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/adapters/adapters.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/null.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/dispatchRequest.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/env/data.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/validator.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/core/Axios.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/cancel/CancelToken.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/axios.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/spread.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/Componentes/VerificarImagenes/VerificarImagenes.jsx","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/Componentes/VerificarVideos/verificarvideos.css?07c4","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/Componentes/VerificarVideos/VerificarVideos.jsx","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/Router/AppRouter.jsx","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/App.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/usmp-mfe-hu2-003-verificar-estado-de-subida-del-arte.js","webpack://mfe-hu2-003-verificar-estado-de-subida-del-arte/./src/root.component.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\r\n    background-color: #F3FBFC;\r\n}\r\n\r\n.contenido .h1 h1 {\r\n    font-size: 36px;\r\n    text-align: center;\r\n    color: #162841;\r\n    align-items: center;\r\n}\r\n\r\n/* Estilos de los botones */\r\n.btns {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.Imagenes {\r\n    border: none;\r\n    background: #146b80;\r\n    padding: 10px;\r\n    color: #ffffff;\r\n    border-radius: 5px;\r\n    margin: 10px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\n/* Estilo para el botón seleccionado */\r\n.selected {\r\n    background: #162841;\r\n}\r\n\r\n/* Estilo para la tabla */\r\n.estadoTable table {\r\n    width: 100%;\r\n    margin-top: 30px;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.estadoTable table thead th {\r\n    background-color: #286C81;\r\n    color: white;\r\n    padding: 10px;\r\n}\r\n\r\n.estadoTable table tbody td {\r\n    padding: 10px;\r\n    text-align: center;\r\n}\r\n\r\n.estadoTable {\r\n    width: 60%;\r\n    background-color: white;\r\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.065);\r\n    border-radius: 5px;\r\n    margin: 40px auto;\r\n    padding: 40px;\r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/Componentes/VerificarImagenes/verificarimagenes.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,cAAc;IACd,mBAAmB;AACvB;;AAEA,2BAA2B;AAC3B;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB;;AAEA,sCAAsC;AACtC;IACI,mBAAmB;AACvB;;AAEA,yBAAyB;AACzB;IACI,WAAW;IACX,gBAAgB;IAChB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,uBAAuB;IACvB,4CAA4C;IAC5C,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;AACjB\",\"sourcesContent\":[\"body {\\r\\n    background-color: #F3FBFC;\\r\\n}\\r\\n\\r\\n.contenido .h1 h1 {\\r\\n    font-size: 36px;\\r\\n    text-align: center;\\r\\n    color: #162841;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n/* Estilos de los botones */\\r\\n.btns {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.Imagenes {\\r\\n    border: none;\\r\\n    background: #146b80;\\r\\n    padding: 10px;\\r\\n    color: #ffffff;\\r\\n    border-radius: 5px;\\r\\n    margin: 10px;\\r\\n    font-weight: bold;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/* Estilo para el botón seleccionado */\\r\\n.selected {\\r\\n    background: #162841;\\r\\n}\\r\\n\\r\\n/* Estilo para la tabla */\\r\\n.estadoTable table {\\r\\n    width: 100%;\\r\\n    margin-top: 30px;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.estadoTable table thead th {\\r\\n    background-color: #286C81;\\r\\n    color: white;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.estadoTable table tbody td {\\r\\n    padding: 10px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.estadoTable {\\r\\n    width: 60%;\\r\\n    background-color: white;\\r\\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.065);\\r\\n    border-radius: 5px;\\r\\n    margin: 40px auto;\\r\\n    padding: 40px;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\r\n    background-color: #F3FBFC;\r\n}\r\n\r\n.contenido .h1 h1 {\r\n    font-size: 36px;\r\n    text-align: center;\r\n    color: #162841;\r\n    align-items: center;\r\n}\r\n\r\n/* Estilos de los botones */\r\n.btns {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.Videos {\r\n    border: none;\r\n    background: #146b80;\r\n    padding: 10px;\r\n    color: #ffffff;\r\n    border-radius: 5px;\r\n    margin: 10px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\n/* Estilo para el botón seleccionado */\r\n.selected {\r\n    background: #162841;\r\n}\r\n\r\n/* Estilo para la tabla*/\r\n.estadoTable table {\r\n    width: 100%;\r\n    margin-top: 30px;\r\n    border-collapse: collapse;\r\n}\r\n\r\n.estadoTable table thead th {\r\n    background-color: #286C81;\r\n    color: white;\r\n    padding: 10px;\r\n}\r\n\r\n.estadoTable table tbody tr {\r\n    padding: 10px;\r\n    text-align: center;\r\n}\r\n\r\n.estadoTable {\r\n    width: 60%;\r\n    background-color: white;\r\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.065);\r\n    border-radius: 5px;\r\n    margin: 40px auto;\r\n    padding: 40px;\r\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/Componentes/VerificarVideos/verificarvideos.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,cAAc;IACd,mBAAmB;AACvB;;AAEA,2BAA2B;AAC3B;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,mBAAmB;IACnB,aAAa;IACb,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB;;AAEA,sCAAsC;AACtC;IACI,mBAAmB;AACvB;;AAEA,wBAAwB;AACxB;IACI,WAAW;IACX,gBAAgB;IAChB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,uBAAuB;IACvB,4CAA4C;IAC5C,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;AACjB\",\"sourcesContent\":[\"body {\\r\\n    background-color: #F3FBFC;\\r\\n}\\r\\n\\r\\n.contenido .h1 h1 {\\r\\n    font-size: 36px;\\r\\n    text-align: center;\\r\\n    color: #162841;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n/* Estilos de los botones */\\r\\n.btns {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.Videos {\\r\\n    border: none;\\r\\n    background: #146b80;\\r\\n    padding: 10px;\\r\\n    color: #ffffff;\\r\\n    border-radius: 5px;\\r\\n    margin: 10px;\\r\\n    font-weight: bold;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/* Estilo para el botón seleccionado */\\r\\n.selected {\\r\\n    background: #162841;\\r\\n}\\r\\n\\r\\n/* Estilo para la tabla*/\\r\\n.estadoTable table {\\r\\n    width: 100%;\\r\\n    margin-top: 30px;\\r\\n    border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.estadoTable table thead th {\\r\\n    background-color: #286C81;\\r\\n    color: white;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n.estadoTable table tbody tr {\\r\\n    padding: 10px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.estadoTable {\\r\\n    width: 60%;\\r\\n    background-color: white;\\r\\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.065);\\r\\n    border-radius: 5px;\\r\\n    margin: 40px auto;\\r\\n    padding: 40px;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: 'Poppins', sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,kCAAkC;EAClC,mCAAmC;EACnC,kCAAkC;;AAEpC;;AAEA;EACE;aACW;AACb\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap');\\r\\n\\r\\n* {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  margin: 0;\\r\\n  font-family: 'Poppins', sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n\\r\\n}\\r\\n\\r\\ncode {\\r\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\r\\n    monospace;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","const resolveDirectory = require(\"../public-path\").resolveDirectory;\n\nexports.autoPublicPath = function autoPublicPath(rootDirLevel) {\n  if (!rootDirLevel) {\n    rootDirLevel = 1;\n  }\n\n  if (typeof __webpack_public_path__ !== \"undefined\") {\n    if (typeof __system_context__ === \"undefined\") {\n      throw Error(\n        \"systemjs-webpack-interop requires webpack@>=5.0.0-beta.15 and output.libraryTarget set to 'system'\"\n      );\n    }\n\n    if (!__system_context__.meta || !__system_context__.meta.url) {\n      console.error(\"__system_context__\", __system_context__);\n      throw Error(\n        \"systemjs-webpack-interop was provided an unknown SystemJS context. Expected context.meta.url, but none was provided\"\n      );\n    }\n\n    __webpack_public_path__ = resolveDirectory(\n      __system_context__.meta.url,\n      rootDirLevel\n    );\n  }\n};\n","exports.setPublicPath = function setPublicPath(\n  systemjsModuleName,\n  rootDirectoryLevel\n) {\n  if (!rootDirectoryLevel) {\n    rootDirectoryLevel = 1;\n  }\n  if (\n    typeof systemjsModuleName !== \"string\" ||\n    systemjsModuleName.trim().length === 0\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName) must be called with a non-empty string 'systemjsModuleName'\"\n    );\n  }\n\n  if (\n    typeof rootDirectoryLevel !== \"number\" ||\n    rootDirectoryLevel <= 0 ||\n    isNaN(rootDirectoryLevel) ||\n    !isInteger(rootDirectoryLevel)\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName, rootDirectoryLevel) must be called with a positive integer 'rootDirectoryLevel'\"\n    );\n  }\n\n  var moduleUrl;\n  try {\n    moduleUrl = window.System.resolve(systemjsModuleName);\n    if (!moduleUrl) {\n      throw Error();\n    }\n  } catch (err) {\n    throw Error(\n      \"systemjs-webpack-interop: There is no such module '\" +\n        systemjsModuleName +\n        \"' in the SystemJS registry. Did you misspell the name of your module?\"\n    );\n  }\n\n  __webpack_public_path__ = resolveDirectory(moduleUrl, rootDirectoryLevel);\n};\n\nfunction resolveDirectory(urlString, rootDirectoryLevel) {\n  // Our friend IE11 doesn't support new URL()\n  // https://github.com/single-spa/single-spa/issues/612\n  // https://gist.github.com/jlong/2428561\n\n  var a = document.createElement(\"a\");\n  a.href = urlString;\n\n  var pathname = a.pathname[0] === \"/\" ? a.pathname : \"/\" + a.pathname;\n  var numDirsProcessed = 0,\n    index = pathname.length;\n  while (numDirsProcessed !== rootDirectoryLevel && index >= 0) {\n    var char = pathname[--index];\n    if (char === \"/\") {\n      numDirsProcessed++;\n    }\n  }\n\n  if (numDirsProcessed !== rootDirectoryLevel) {\n    throw Error(\n      \"systemjs-webpack-interop: rootDirectoryLevel (\" +\n        rootDirectoryLevel +\n        \") is greater than the number of directories (\" +\n        numDirsProcessed +\n        \") in the URL path \" +\n        urlString\n    );\n  }\n\n  var finalPath = pathname.slice(0, index + 1);\n\n  return a.protocol + \"//\" + a.host + finalPath;\n}\n\nexports.resolveDirectory = resolveDirectory;\n\n// borrowed from https://github.com/parshap/js-is-integer/blob/master/index.js\nvar isInteger =\n  Number.isInteger ||\n  function isInteger(val) {\n    return typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n  };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__726__;","module.exports = __WEBPACK_EXTERNAL_MODULE__867__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.y = __system_context__;","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","__webpack_require__.nc = undefined;","const autoPublicPath = require(\"./auto-public-path\").autoPublicPath;\n\nautoPublicPath(1);\n","function e(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function t(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?e(Object(r),!0).forEach((function(e){o(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):e(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e,t){var n;if(\"function\"!=typeof(n=t.domElement?function(){return t.domElement}:t.domElementGetter?t.domElementGetter:e.domElementGetter?e.domElementGetter:function(e){var t=e.appName||e.name;if(!t)throw Error(\"single-spa's dom-element-getter-helpers was not given an application name as a prop, so it can't make a unique dom element container for the react application\");var n=\"single-spa-application:\".concat(t);return function(){var e=document.getElementById(n);return e||((e=document.createElement(\"div\")).id=n,document.body.appendChild(e)),e}}(t)))throw Error(\"single-spa's dom-element-getter-helpers was given an invalid domElementGetter for application or parcel '\".concat(t.name,\"'. Expected a function, received \").concat(r(n)));return function(){var e=n(t);if(!(e instanceof HTMLElement))throw Error(\"single-spa's dom-element-getter-helpers: domElementGetter returned an invalid dom element for application or parcel '\".concat(t.name,\"'. Expected HTMLElement, received \").concat(r(e)));return e}}var i=null;try{i=require(\"react\").createContext()}catch(e){}var c={React:null,ReactDOM:null,rootComponent:null,loadRootComponent:null,renderType:null,errorBoundary:null,errorBoundaryClass:null,domElementGetter:null,parcelCanUpdate:!0,suppressComponentDidCatchWarning:!1,domElements:{},renderResults:{},updateResolves:{}};function u(e){if(\"object\"!==n(e))throw new Error(\"single-spa-react requires a configuration object\");var o=t(t({},c),e);if(!o.React)throw new Error(\"single-spa-react must be passed opts.React\");if(!o.ReactDOM)throw new Error(\"single-spa-react must be passed opts.ReactDOM\");if(!o.rootComponent&&!o.loadRootComponent)throw new Error(\"single-spa-react must be passed opts.rootComponent or opts.loadRootComponent\");if(o.errorBoundary&&\"function\"!=typeof o.errorBoundary)throw Error(\"The errorBoundary opt for single-spa-react must either be omitted or be a function that returns React elements\");!i&&o.React.createContext&&(i=o.React.createContext()),o.SingleSpaRoot=function(e){function t(e){t.displayName=\"SingleSpaRoot(\".concat(e.name,\")\")}return t.prototype=Object.create(e.React.Component.prototype),t.prototype.componentDidMount=function(){setTimeout(this.props.mountFinished)},t.prototype.componentWillUnmount=function(){setTimeout(this.props.unmountFinished)},t.prototype.render=function(){return setTimeout(this.props.updateFinished),this.props.children},t}(o);var r={bootstrap:p.bind(null,o),mount:s.bind(null,o),unmount:l.bind(null,o)};return o.parcelCanUpdate&&(r.update=m.bind(null,o)),r}function p(e,t){return e.rootComponent?Promise.resolve():e.loadRootComponent(t).then((function(t){e.rootComponent=t}))}function s(e,t){return new Promise((function(n,o){e.suppressComponentDidCatchWarning||!function(e){if(!(e&&\"string\"==typeof e.version&&e.version.indexOf(\".\")>=0))return!1;var t=e.version.slice(0,e.version.indexOf(\".\"));try{return Number(t)>=16}catch(e){return!1}}(e.React)||e.errorBoundary||(e.rootComponent.prototype?e.rootComponent.prototype.componentDidCatch||console.warn(\"single-spa-react: \".concat(t.name||t.appName||t.childAppName,\"'s rootComponent should implement componentDidCatch to avoid accidentally unmounting the entire single-spa application.\")):console.warn(\"single-spa-react: \".concat(t.name||t.appName||t.childAppName,\"'s rootComponent does not implement an error boundary.  If using a functional component, consider providing an opts.errorBoundary to singleSpaReact(opts).\")));var r=d(e,t,(function(){n(this)})),i=a(e,t)(),c=function(e){var t=e.opts,n=e.elementToRender,o=e.domElement,r=\"function\"==typeof t.renderType?t.renderType():t.renderType;if([\"createRoot\",\"unstable_createRoot\",\"createBlockingRoot\",\"unstable_createBlockingRoot\"].indexOf(r)>=0){var a=t.ReactDOM[r](o);return a.render(n),a}\"hydrate\"===r?t.ReactDOM.hydrate(n,o):t.ReactDOM.render(n,o);return null}({elementToRender:r,domElement:i,opts:e});e.domElements[t.name]=i,e.renderResults[t.name]=c}))}function l(e,t){return new Promise((function(n){e.unmountFinished=n;var o=e.renderResults[t.name];o&&o.unmount?o.unmount():e.ReactDOM.unmountComponentAtNode(e.domElements[t.name]),delete e.domElements[t.name],delete e.renderResults[t.name]}))}function m(e,t){return new Promise((function(n){e.updateResolves[t.name]||(e.updateResolves[t.name]=[]),e.updateResolves[t.name].push(n);var o=d(e,t,null),r=e.renderResults[t.name];if(r&&r.render)r.render(o);else{var i=a(e,t)();e.ReactDOM.render(o,i)}}))}function d(e,n,o){var r=e.React.createElement(e.rootComponent,n),a=i?e.React.createElement(i.Provider,{value:n},r):r;return(e.errorBoundary||n.errorBoundary||e.errorBoundaryClass||n.errorBoundaryClass)&&(e.errorBoundaryClass=e.errorBoundaryClass||n.errorBoundaryClass||function(e,t){function n(t){e.React.Component.apply(this,arguments),this.state={caughtError:null,caughtErrorInfo:null},n.displayName=\"SingleSpaReactErrorBoundary(\".concat(t.name,\")\")}return n.prototype=Object.create(e.React.Component.prototype),n.prototype.render=function(){return this.state.caughtError?(e.errorBoundary||t.errorBoundary)(this.state.caughtError,this.state.caughtErrorInfo,this.props):this.props.children},n.prototype.componentDidCatch=function(e,t){this.setState({caughtError:e,caughtErrorInfo:t})},n}(e,n),a=e.React.createElement(e.errorBoundaryClass,n,a)),a=e.React.createElement(e.SingleSpaRoot,t(t({},n),{},{mountFinished:o,updateFinished:function(){e.updateResolves[n.name]&&(e.updateResolves[n.name].forEach((function(e){return e()})),delete e.updateResolves[n.name])},unmountFinished:function(){setTimeout(e.unmountFinished)}}),a)}export{i as SingleSpaContext,u as default};\n//# sourceMappingURL=single-spa-react.js.map\n","/**\n * @remix-run/router v1.16.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === matches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    unstable_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized;\n  let hasLazyRoutes = initialMatches.some(m => m.route.lazy);\n  let hasLoaders = initialMatches.some(m => m.route.loader);\n  if (hasLazyRoutes) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!hasLoaders) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = m => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (typeof m.route.loader === \"function\" && m.route.loader.hydrate === true) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined;\n    };\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches);\n      result = results[0];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.unstable_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    if (!isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration)) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData;\n      if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n        // This is cast to `any` currently because `RouteData`uses any and it\n        // would be a breaking change to use any.\n        // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n        actionData = {\n          [pendingActionResult[0]]: pendingActionResult[1].data\n        };\n      } else if (state.actionData) {\n        if (Object.keys(state.actionData).length === 0) {\n          actionData = null;\n        } else {\n          actionData = state.actionData;\n        }\n      }\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData !== undefined ? {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors).filter(_ref2 => {\n        let [id] = _ref2;\n        return !matchesToLoad.some(m => m.route.id === id);\n      }).forEach(_ref3 => {\n        let [routeId, error] = _ref3;\n        errors = Object.assign(errors || {}, {\n          [routeId]: error\n        });\n      });\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", fetchRequest, [match], requestMatches);\n    let actionResult = actionResults[0];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.unstable_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", fetchRequest, [match], matches);\n    let result = results[0];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches) {\n    try {\n      let results = await callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties);\n      return await Promise.all(results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result;\n          return {\n            type: ResultType.redirect,\n            response: normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath)\n          };\n        }\n        return convertHandlerResultToDataResult(result);\n      }));\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e\n      }));\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([matchesToLoad.length ? callDataStrategy(\"loader\", request, matchesToLoad, matches) : [], ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        let fetcherRequest = createClientSideRequest(init.history, f.path, f.controller.signal);\n        return callDataStrategy(\"loader\", fetcherRequest, [f.match], f.matches).then(r => r[0]);\n      } else {\n        return Promise.resolve({\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        });\n      }\n    })]);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref4) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref4;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      unstable_dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, unstable_dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, unstable_dataStrategy);\n      result = results[0];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, unstable_dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, unstable_dataStrategy) {\n    let results = await callDataStrategyImpl(unstable_dataStrategy || defaultDataStrategy, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext);\n    return await Promise.all(results.map((result, i) => {\n      if (isRedirectHandlerResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, matchesToLoad[i].route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      return convertHandlerResultToDataResult(result);\n    }));\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref5) => {\n        let [name, value] = _ref5;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[0] : undefined;\n  let boundaryMatches = boundaryId ? getLoaderMatchesUntilBoundary(matches, boundaryId) : matches;\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return state.loaderData[route.id] === undefined && (\n      // Don't re-run if the loader ran and threw an error\n      !state.errors || state.errors[route.id] === undefined);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      unstable_actionStatus: actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (isInitialLoad || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        unstable_actionStatus: actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(opts) {\n  return Promise.all(opts.matches.map(m => m.resolve()));\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, manifest, mapRouteProperties, requestContext) {\n  let routeIdsToLoad = matchesToLoad.reduce((acc, m) => acc.add(m.route.id), new Set());\n  let loadedMatches = new Set();\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map(match => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve = handlerOverride => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad ? callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, requestContext) : Promise.resolve({\n          type: ResultType.data,\n          result: undefined\n        });\n      };\n      return _extends({}, match, {\n        shouldLoad,\n        resolve\n      });\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext\n  });\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach(m => invariant(loadedMatches.has(m.route.id), \"`match.resolve()` was not called for route id \\\"\" + m.route.id + \"\\\". \" + \"You must call `match.resolve()` on every match passed to \" + \"`dataStrategy` to ensure all routes are properly loaded.\"));\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, manifest, mapRouteProperties, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride(ctx => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return {\n            type: \"data\",\n            result: val\n          };\n        } catch (e) {\n          return {\n            type: \"error\",\n            result: e\n          };\n        }\n      })();\n    }\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertHandlerResultToDataResult(handlerResult) {\n  let {\n    result,\n    type,\n    status\n  } = handlerResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : status\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result,\n    statusCode: status\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isHandlerResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectHandlerResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * React Router v6.23.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.23.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./verificarimagenes.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./verificarimagenes.css\";\n       export default content && content.locals ? content.locals : undefined;\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\n\nexport default (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  }, freq);\n}\n","'use strict';\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  const threshold = 1000 / freq;\n  let timer = null;\n  return function throttled() {\n    const force = this === true;\n\n    const now = Date.now();\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      timestamp = now;\n      return fn.apply(null, arguments);\n    }\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, arguments);\n      }, threshold - (now - timestamp));\n    }\n  };\n}\n\nexport default throttle;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport progressEventReducer from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType} = _config;\n    let onCanceled;\n    function done() {\n      if (_config.cancelToken) {\n        _config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (_config.signal) {\n        _config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        _config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof _config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(_config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof _config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(_config.onUploadProgress));\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst composeSignals = (signals, timeout) => {\n  let controller = new AbortController();\n\n  let aborted;\n\n  const onabort = function (cancel) {\n    if (!aborted) {\n      aborted = true;\n      unsubscribe();\n      const err = cancel instanceof Error ? cancel : this.reason;\n      controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n    }\n  }\n\n  let timer = timeout && setTimeout(() => {\n    onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n  }, timeout)\n\n  const unsubscribe = () => {\n    if (signals) {\n      timer && clearTimeout(timer);\n      timer = null;\n      signals.forEach(signal => {\n        signal &&\n        (signal.removeEventListener ? signal.removeEventListener('abort', onabort) : signal.unsubscribe(onabort));\n      });\n      signals = null;\n    }\n  }\n\n  signals.forEach((signal) => signal && signal.addEventListener && signal.addEventListener('abort', onabort));\n\n  const {signal} = controller;\n\n  signal.unsubscribe = unsubscribe;\n\n  return [signal, () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  }];\n}\n\nexport default composeSignals;\n","\n\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n\n  return new ReadableStream({\n    type: 'bytes',\n\n    async pull(controller) {\n      const {done, value} = await iterator.next();\n\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport progressEventReducer from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst fetchProgressDecorator = (total, fn) => {\n  const lengthComputable = total != null;\n  return (loaded) => setTimeout(() => fn({\n    lengthComputable,\n    total,\n    loaded\n  }));\n}\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst supportsRequestStream = isReadableStreamSupported && (() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n})();\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported && !!(()=> {\n  try {\n    return utils.isReadableStream(new Response('').body);\n  } catch(err) {\n    // return undefined\n  }\n})();\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    return (await new Request(body).arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let [composedSignal, stopTimeout] = (signal || cancelToken || timeout) ?\n    composeSignals([signal, cancelToken], timeout) : [];\n\n  let finished, request;\n\n  const onFinish = () => {\n    !finished && setTimeout(() => {\n      composedSignal && composedSignal.unsubscribe();\n    });\n\n    finished = true;\n  }\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, fetchProgressDecorator(\n          requestContentLength,\n          progressEventReducer(onUploadProgress)\n        ), null, encodeText);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'cors' : 'omit';\n    }\n\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      withCredentials\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onDownloadProgress && fetchProgressDecorator(\n          responseContentLength,\n          progressEventReducer(onDownloadProgress, true)\n        ), isStreamResponse && onFinish, encodeText),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && onFinish();\n\n    stopTimeout && stopTimeout();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    onFinish();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.2\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './verificarimagenes.css';\r\nimport axios from 'axios';\r\n\r\nconst VerificarImagenes = () => {\r\n  const location = useLocation();\r\n  const [imageStatuses, setImageStatuses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImageStatuses = async () => {\r\n      try {\r\n        const response = await axios.get('/VerificarImagenes.json'); // Cambia la URL según sea necesario\r\n        setImageStatuses(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching image statuses:', error);\r\n      }\r\n    };\r\n\r\n    fetchImageStatuses();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='contenido'>\r\n      <div className='h1'>\r\n        <br />\r\n        <h1>Estado del Portafolio</h1>\r\n      </div>\r\n\r\n      <br />\r\n      <div className=\"redirec\">\r\n        <div className='btns'>\r\n          <button\r\n            className={`Imagenes ${location.pathname === '/VerificarImagenes' ? 'selected' : ''}`}\r\n          >\r\n            Imagenes\r\n          </button>\r\n          {\"   -   \"}\r\n          <Link to=\"/VerificarVideos\">\r\n            <button\r\n              className={`Videos ${location.pathname === '/VerificarVideos' ? 'selected' : ''}`}\r\n            >\r\n              Videos\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className='estadoTable'>\r\n          <table border={0} cellPadding={0} cellSpacing={0}>\r\n            <thead>\r\n              <tr>\r\n                <th>Estado</th>\r\n                <th>N. Estados</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>No se envió</td>\r\n                <td>{imageStatuses.no_se_envio}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Aprobación pendiente</td>\r\n                <td>{imageStatuses.aprobacion_pendiente}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Revisión reciente</td>\r\n                <td>{imageStatuses.revision_reciente}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>------------------------</td>\r\n                <td>----</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Cartera de Imagenes</td>\r\n                <td>{imageStatuses.cartera}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificarImagenes;\r\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./verificarvideos.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./verificarvideos.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './verificarvideos.css';\r\nimport axios from 'axios';\r\n\r\nconst VerificarVideos = () => {\r\n  const location = useLocation();\r\n  const [videoStatuses, setVideoStatuses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVideoStatuses = async () => {\r\n      try {\r\n        const response = await axios.get('/VerificarVideos.json');\r\n        setVideoStatuses(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching video statuses:', error);\r\n      }\r\n    };\r\n\r\n    fetchVideoStatuses();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='contenido'>\r\n      <div className='h1'>\r\n        <br />\r\n        <h1>Estado del Portafolio</h1>\r\n      </div>\r\n\r\n      <br />\r\n      <div className=\"redirec\">\r\n        <div className='btns'>\r\n          <Link to=\"/VerificarImagenes\">\r\n            <button\r\n              className={`Imagenes ${location.pathname === '/VerificarImagenes' ? 'selected' : ''}`}\r\n            >\r\n              Imagenes\r\n            </button>\r\n          </Link>\r\n          {\"   -   \"}\r\n          <button\r\n            className={`Videos ${location.pathname === '/VerificarVideos' ? 'selected' : ''}`}\r\n          >\r\n            Videos\r\n          </button>\r\n        </div>\r\n\r\n        <div className='estadoTable'>\r\n          <table border={0} cellPadding={0} cellSpacing={0}>\r\n            <thead>\r\n              <tr>\r\n                <th>Estado</th>\r\n                <th>N. Estados</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>No se envió</td>\r\n                <td>{videoStatuses.no_se_envio}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Aprobación pendiente</td>\r\n                <td>{videoStatuses.aprobacion_pendiente}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Revisión reciente</td>\r\n                <td>{videoStatuses.revision_reciente}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>------------------------</td>\r\n                <td>----</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Cartera de Videos</td>\r\n                <td>{videoStatuses.cartera}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificarVideos;\r\n\r\n","import React from 'react'\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport VerificarImagenes from '../Componentes/VerificarImagenes/VerificarImagenes'\r\nimport VerificarVideos from '../Componentes/VerificarVideos/VerificarVideos'\r\n\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <>\r\n        <Routes>\r\n            <Route path=\"/VerificarImagenes\" element={<VerificarImagenes/>}/>\r\n            <Route path=\"/VerificarVideos\" element={<VerificarVideos/>}/>\r\n        </Routes>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default AppRouter;\r\n\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { AppRouter,  } from './Router/AppRouter';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <AppRouter/>\r\n      </Router>\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport singleSpaReact from \"single-spa-react\";\r\nimport Root from \"./root.component\";\r\n\r\nconst lifecycles = singleSpaReact({\r\n  React,\r\n  ReactDOM,\r\n  rootComponent: Root,\r\n  errorBoundary(err, info, props) {\r\n    // Customize the root error boundary for your microfrontend here.\r\n    return null;\r\n  },\r\n});\r\n\r\nexport const { bootstrap, mount, unmount } = lifecycles;\r\n","// export default function Root(props) {\r\n//   return <section>{props.name} is mounted!</section>;\r\n// }\r\nimport React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nexport default function Root(props){\r\n  return <App/>;\r\n}"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","n","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","TypeError","toObject","s","arguments","key","call","f","g","Fragment","Symbol","for","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","b","d","e","l","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","resolveDirectory","rootDirLevel","meta","url","console","error","urlString","rootDirectoryLevel","href","pathname","numDirsProcessed","finalPath","slice","protocol","host","Number","isInteger","__WEBPACK_EXTERNAL_MODULE__726__","__WEBPACK_EXTERNAL_MODULE__867__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","y","__system_context__","getter","__esModule","definition","o","defineProperty","enumerable","get","prop","r","toStringTag","value","nc","autoPublicPath","t","filter","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","iterator","constructor","configurable","writable","domElement","domElementGetter","appName","name","getElementById","body","HTMLElement","require","createContext","React","ReactDOM","rootComponent","loadRootComponent","renderType","errorBoundary","errorBoundaryClass","parcelCanUpdate","suppressComponentDidCatchWarning","domElements","renderResults","updateResolves","Promise","resolve","then","version","indexOf","componentDidCatch","warn","childAppName","opts","elementToRender","render","hydrate","unmountFinished","unmount","unmountComponentAtNode","Provider","Component","state","caughtError","caughtErrorInfo","displayName","create","children","setState","SingleSpaRoot","mountFinished","updateFinished","setTimeout","Action","_extends","bind","locals","PopStateEventType","invariant","message","warning","cond","getHistoryState","location","usr","idx","createLocation","search","hash","parsePath","Math","random","substr","_ref","charAt","path","parsedPath","hashIndex","searchIndex","ResultType","matchRoutes","routes","locationArg","basename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","computeScore","_route$path","includes","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","replace","restExploded","subpath","Set","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","getResolveToMatches","v7_relativeSplatPath","pathMatches","getPathContributingMatches","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useIsomorphicLayoutEffect","cb","static","router","hookName","ctx","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","navigator","routePathnamesJson","go","parse","relative","useNavigateUnstable","_temp2","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_dataRouterState2","_dataRouterState","errors","errorIndex","findIndex","min","renderFallback","fallbackIndex","v7_partialHydration","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","lazy","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","alreadyWarned","getChildren","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","encodeLocation","navigationType","Pop","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","stack","preStyles","padding","backgroundColor","fontStyle","super","getDerivedStateFromError","getDerivedStateFromProps","errorInfo","staticContext","_deepestRenderedBoundaryId","useRouteContext","thisRoute","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","action","hasErrorBoundary","shouldRevalidate","handle","_excluded","__reactRouterVersion","Map","BrowserRouter","_ref4","historyRef","getLocation","createHref","validateLocation","defaultView","v5Compat","globalHistory","history","listener","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","fn","addEventListener","removeEventListener","Push","historyState","pushState","DOMException","Replace","getUrlBasedHistory","setStateImpl","v7_startTransition","newState","isBrowser","Link","_ref7","absoluteHref","onClick","reloadDocument","preventScrollReset","unstable_viewTransition","excluded","sourceKeys","_objectWithoutPropertiesLoose","isExternal","currentUrl","targetUrl","_temp","joinedPathname","useHref","internalOnClick","replaceProp","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","asyncGeneratorStep","u","done","_asyncToGenerator","_next","_throw","_arrayLikeToArray","Array","_slicedToArray","isArray","next","thisArg","getPrototypeOf","kindOf","cache","thing","str","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isHeaders","allOwnKeys","len","findKey","_key","_global","globalThis","self","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","reducedDescriptors","descriptor","ret","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","isBuffer","isFormData","kind","FormData","append","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isResponse","isStream","pipe","merge","caseless","assignValue","targetKey","extend","trim","stripBOM","charCodeAt","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","searchString","position","lastIndex","toArray","arr","forEachEntry","pair","matchAll","regExp","exec","hasOwnProp","freezeMethods","set","toObjectSet","arrayOrString","delimiter","define","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","isFinite","generateString","size","alphabet","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","catch","AxiosError","code","config","request","response","captureStackTrace","utils","toJSON","description","number","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","token","predicates","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","el","exposedHelpers","build","encode","charMap","AxiosURLSearchParams","_pairs","encoder","_encode","buildURL","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","clear","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","classes","URLSearchParams","protocols","hasBrowserEnv","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","tokens","tokensRE","parseTokens","has","deleted","deleteHeader","normalize","format","normalized","w","formatHeader","targets","asStrings","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","reject","ERR_BAD_REQUEST","floor","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","bytes","timestamps","firstSampleTS","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","timestamp","threshold","timer","force","clearTimeout","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","msie","userAgent","urlParsingNode","originURL","resolveURL","hostname","port","requestURL","write","expires","domain","secure","cookie","toGMTString","read","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","username","password","Boolean","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","_config","resolveConfig","requestData","requestHeaders","onCanceled","unsubscribe","signal","onloadend","responseHeaders","getAllResponseHeaders","responseText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","progressEventReducer","upload","cancel","abort","subscribe","aborted","parseProtocol","send","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","pos","trackStream","stream","onProgress","onFinish","async","iterable","readBytes","ReadableStream","pull","close","enqueue","return","highWaterMark","fetchProgressDecorator","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","res","ERR_NOT_SUPPORT","fetchOptions","finished","composedSignal","stopTimeout","requestContentLength","getContentLength","getBodyLength","resolveBodyLength","contentTypeHeader","_request","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhr","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","validators","deprecatedWarnings","validator","formatMessage","opt","desc","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","VERSION","toFormData","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","useLocation","_useState2","useState","imageStatuses","setImageStatuses","useEffect","fetchImageStatuses","regeneratorRuntime","mark","_callee","wrap","_context","prev","sent","t0","stop","_jsxs","className","_jsx","border","cellPadding","cellSpacing","no_se_envio","aprobacion_pendiente","revision_reciente","cartera","videoStatuses","setVideoStatuses","fetchVideoStatuses","AppRouter","_Fragment","VerificarImagenes","VerificarVideos","Router","lifecycles","componentDidMount","componentWillUnmount","bootstrap","mount","singleSpaReact","App","info"],"sourceRoot":""}